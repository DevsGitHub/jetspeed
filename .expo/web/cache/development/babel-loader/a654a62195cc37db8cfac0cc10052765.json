{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"c:\\\\xampp\\\\htdocs\\\\jetspeed\\\\auth\\\\SignIn.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Feather } from '@expo/vector-icons';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { styles } from \"../styles/signInStyles\";\nimport { LOGIN_USER } from \"../graphql/GraphQLQuery\";\nimport { useQuery } from '@apollo/client';\n\nvar SignIn = function SignIn(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      secureTextEntry = _useState2[0],\n      setSecureTextEntry = _useState2[1];\n\n  var _useMutation = useMutation(LOGIN_USER),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      signIn = _useMutation2[0];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      submitLoad = _useState4[0],\n      setSubmitLoad = _useState4[1];\n\n  var loginValidationSchema = yup.object().shape({\n    email: yup.string().email(\"Please enter valid email\").required('Email Address is required'),\n    password: yup.string().min(8, function (_ref2) {\n      var min = _ref2.min;\n      return \"Password must be at least \" + min + \" characters\";\n    }).required('Password is required')\n  });\n  return React.createElement(SafeAreaProvider, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    showVerticalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.jetSpeedWordContainter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.jetWord,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"JET\"), React.createElement(Text, {\n    style: styles.speedWord,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \"SPEED\")), React.createElement(View, {\n    style: styles.welcomeWordContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.welcome,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \"Welcome Back,\"), React.createElement(Text, {\n    style: styles.signContinue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"Sign in to continue\")), React.createElement(View, {\n    style: styles.formContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, React.createElement(Formik, {\n    validationSchema: loginValidationSchema,\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: function _callee(data, _ref3) {\n      var setErrors, response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setErrors = _ref3.setErrors;\n              _context.prev = 1;\n              setSubmitLoad(true);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(addUser({\n                variables: data\n              }));\n\n            case 5:\n              response = _context.sent;\n              console.log('response', response);\n              setSubmitLoad(false);\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.log('err', _context.t0);\n              setSubmitLoad(false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 10]], Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, function (_ref4) {\n    var handleChange = _ref4.handleChange,\n        handleBlur = _ref4.handleBlur,\n        handleSubmit = _ref4.handleSubmit,\n        values = _ref4.values,\n        errors = _ref4.errors,\n        isValid = _ref4.isValid;\n    return React.createElement(React.Fragment, null, React.createElement(View, {\n      style: styles.fieldContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, React.createElement(Feather, {\n      name: \"mail\",\n      size: 20,\n      style: styles.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }), React.createElement(TextInput, {\n      name: \"email\",\n      placeholder: \"Email Address\",\n      style: styles.field,\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email'),\n      value: values.email,\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    })), errors.email && React.createElement(Text, {\n      style: styles.errorField,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 46\n      }\n    }, errors.email), React.createElement(View, {\n      style: styles.fieldContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, React.createElement(Feather, {\n      name: \"lock\",\n      size: 20,\n      style: styles.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }), React.createElement(TextInput, {\n      name: \"password\",\n      placeholder: \"Password\",\n      style: styles.field,\n      onChangeText: handleChange('password'),\n      onBlur: handleBlur('password'),\n      value: values.password,\n      secureTextEntry: secureTextEntry,\n      autoCapitalize: \"none\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setSecureTextEntry(!secureTextEntry);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }, React.createElement(Feather, {\n      name: secureTextEntry === true ? \"eye\" : \"eye-off\",\n      size: 20,\n      color: '#fff',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 37\n      }\n    }))), errors.password && React.createElement(Text, {\n      style: styles.errorField,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 49\n      }\n    }, errors.password), React.createElement(TouchableOpacity, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: styles.forgotPass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, \"Forgot password?\")), React.createElement(View, {\n      style: styles.signInContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: handleSubmit,\n      disabled: !isValid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.signInButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 37\n      }\n    }, \" SIGN IN \"))));\n  }), React.createElement(View, {\n    style: styles.signUpContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.dontHaveAcc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, \"Don't have an account?\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('SignUp');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.signUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, \" Sign up \"))))));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["c:/xampp/htdocs/jetspeed/auth/SignIn.js"],"names":["React","useState","ScrollView","SafeAreaProvider","Feather","yup","Formik","styles","LOGIN_USER","useQuery","SignIn","navigation","secureTextEntry","setSecureTextEntry","useMutation","signIn","submitLoad","setSubmitLoad","loginValidationSchema","object","shape","email","string","required","password","min","container","jetSpeedWordContainter","jetWord","speedWord","welcomeWordContainer","welcome","signContinue","formContainer","data","setErrors","addUser","variables","response","console","log","handleChange","handleBlur","handleSubmit","values","errors","isValid","fieldContainer","icon","field","errorField","forgotPass","signInContainer","signInButton","signUpContainer","dontHaveAcc","navigate","signUp"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, TextInput } from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport {Feather} from '@expo/vector-icons'\r\nimport * as yup from 'yup'\r\nimport { Formik } from 'formik'\r\nimport { styles } from '../styles/signInStyles';\r\n\r\nimport {LOGIN_USER} from '../graphql/GraphQLQuery'\r\nimport { useQuery } from '@apollo/client'\r\n\r\nconst SignIn = ({navigation}) => {\r\n    const [secureTextEntry, setSecureTextEntry] = useState(true)\r\n    const [signIn] = useMutation(LOGIN_USER)\r\n    const [submitLoad, setSubmitLoad] = useState(false)\r\n\r\n    const loginValidationSchema = yup.object().shape({\r\n        email: yup.string().email(\"Please enter valid email\").required('Email Address is required'),\r\n        password: yup.string().min(8, ({ min }) => `Password must be at least ${min} characters`).required('Password is required'),\r\n    })\r\n\r\n    //push\r\n    return (\r\n        <SafeAreaProvider style={styles.container}>\r\n            <ScrollView showVerticalScrollIndicator={false}>\r\n                <View style={styles.jetSpeedWordContainter}>\r\n                    <Text style={styles.jetWord}>JET</Text>\r\n                    <Text style={styles.speedWord}>SPEED</Text>\r\n                </View>\r\n                <View style={styles.welcomeWordContainer}>\r\n                    <Text style={styles.welcome}>Welcome Back,</Text>\r\n                    <Text style={styles.signContinue}>Sign in to continue</Text>\r\n                </View>\r\n                <View style={styles.formContainer}>\r\n                    <Formik\r\n                        validationSchema={loginValidationSchema}\r\n                        initialValues={{ email: '', password: '' }}\r\n                        onSubmit={\r\n                            async (data, {setErrors}) => {\r\n                                try {\r\n                                    setSubmitLoad(true);\r\n                                    const response = await addUser({\r\n                                        variables: data\r\n                                    })\r\n                                    console.log('response', response)\r\n                                    setSubmitLoad(false);\r\n                                } catch (error) {\r\n                                    console.log('err', error);\r\n                                    setSubmitLoad(false);\r\n                                }\r\n                            }}\r\n                    >\r\n                        {({ \r\n                            handleChange, \r\n                            handleBlur, \r\n                            handleSubmit, \r\n                            values,\r\n                            errors,\r\n                            isValid,\r\n                         }) => (\r\n                        <>\r\n                            <View style={styles.fieldContainer}>\r\n                                <Feather\r\n                                    name=\"mail\"\r\n                                    size={20}\r\n                                    style={styles.icon}\r\n                                />\r\n                                <TextInput\r\n                                    name=\"email\"\r\n                                    placeholder=\"Email Address\"\r\n                                    style={styles.field}\r\n                                    onChangeText={handleChange('email')}\r\n                                    onBlur={handleBlur('email')}\r\n                                    value={values.email}\r\n                                    keyboardType=\"email-address\"\r\n                                />\r\n                            </View>\r\n                            {errors.email && <Text style={styles.errorField}>{errors.email}</Text>}\r\n\r\n                            <View style={styles.fieldContainer}>\r\n                                <Feather\r\n                                    name=\"lock\"\r\n                                    size={20}\r\n                                    style={styles.icon}\r\n                                />\r\n                                <TextInput\r\n                                    name=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    style={styles.field}\r\n                                    onChangeText={handleChange('password')}\r\n                                    onBlur={handleBlur('password')}\r\n                                    value={values.password}\r\n                                    secureTextEntry={secureTextEntry}\r\n                                    autoCapitalize=\"none\"\r\n                                />\r\n                                <TouchableOpacity onPress={() => setSecureTextEntry(!secureTextEntry)}>\r\n                                    <Feather\r\n                                        name={secureTextEntry === true ? \"eye\" : \"eye-off\"}\r\n                                        size={20}\r\n                                        color={'#fff'}\r\n                                    />\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                            {errors.password && <Text style={styles.errorField}>{errors.password}</Text>}\r\n\r\n                            <TouchableOpacity>\r\n                                <Text style={styles.forgotPass}>Forgot password?</Text>\r\n                            </TouchableOpacity>\r\n\r\n                            <View style={styles.signInContainer}>\r\n                                <TouchableOpacity onPress={handleSubmit} disabled={!isValid}>\r\n                                    <Text style={styles.signInButton}> SIGN IN </Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </>\r\n                        )}\r\n                    </Formik>\r\n                    <View style={styles.signUpContainer}>\r\n                        <Text style={styles.dontHaveAcc}>\r\n                            Don't have an account?\r\n                        </Text>\r\n                        <TouchableOpacity onPress={() => navigation.navigate('SignUp')}>\r\n                            <Text style={styles.signUp}> Sign up </Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n        </SafeAreaProvider>\r\n    );\r\n}\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}