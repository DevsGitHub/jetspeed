{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"c:\\\\xampp\\\\htdocs\\\\jetspeed\\\\auth\\\\SignIn.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Feather } from '@expo/vector-icons';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { styles } from \"../styles/loginStyles\";\n\nvar SignIn = function SignIn(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      secureTextEntry = _useState2[0],\n      setSecureTextEntry = _useState2[1];\n\n  var loginValidationSchema = yup.object().shape({\n    email: yup.string().email(\"Please enter valid email\").required('Email Address is required'),\n    password: yup.string().min(8, function (_ref2) {\n      var min = _ref2.min;\n      return \"Password must be at least \" + min + \" characters\";\n    }).required('Password is required')\n  });\n  return React.createElement(SafeAreaProvider, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    showVerticalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      marginTop: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\",\n      fontSize: 22,\n      color: '#fff'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, \"JET\"), React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\",\n      fontSize: 22,\n      color: '#333'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"SPEED\")), React.createElement(View, {\n    style: {\n      marginTop: 70\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 27,\n      fontWeight: 'bold',\n      color: '#fff'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, \"Welcome Back,\"), React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      fontWeight: 'bold',\n      color: '#333'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, \"Sign in to continue\")), React.createElement(View, {\n    style: {\n      marginTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, React.createElement(Formik, {\n    validationSchema: loginValidationSchema,\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: function onSubmit(values) {\n      return console.log(values);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, function (_ref3) {\n    var handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur,\n        handleSubmit = _ref3.handleSubmit,\n        values = _ref3.values,\n        errors = _ref3.errors,\n        isValid = _ref3.isValid;\n    return React.createElement(React.Fragment, null, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        marginTop: 20,\n        borderBottomWidth: 1,\n        borderBottomColor: '#f2f2f2',\n        paddingBottom: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, React.createElement(Feather, {\n      name: \"mail\",\n      color: '#fff',\n      size: 20,\n      style: {\n        position: 'absolute'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }), React.createElement(TextInput, {\n      name: \"email\",\n      placeholder: \"Email Address\",\n      style: {\n        color: '#fff',\n        paddingLeft: 30,\n        flex: 1,\n        fontSize: 18\n      },\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email'),\n      value: values.email,\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    })), errors.email && React.createElement(Text, {\n      style: {\n        fontSize: 12,\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }, errors.email), React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        marginTop: 20,\n        borderBottomWidth: 1,\n        borderBottomColor: '#f2f2f2',\n        paddingBottom: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, React.createElement(Feather, {\n      name: \"lock\",\n      color: '#fff',\n      size: 20,\n      style: {\n        position: 'absolute'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }), React.createElement(TextInput, {\n      name: \"password\",\n      placeholder: \"Password\",\n      style: {\n        color: '#fff',\n        paddingLeft: 30,\n        flex: 1,\n        fontSize: 18\n      },\n      onChangeText: handleChange('password'),\n      onBlur: handleBlur('password'),\n      value: values.password,\n      secureTextEntry: secureTextEntry,\n      autoCapitalize: \"none\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setSecureTextEntry(!secureTextEntry);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, React.createElement(Feather, {\n      name: secureTextEntry === true ? \"eye\" : \"eye-off\",\n      size: 20,\n      color: '#fff',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 37\n      }\n    }))), errors.password && React.createElement(Text, {\n      style: {\n        fontSize: 12,\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, errors.password), React.createElement(TouchableOpacity, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: '#17a2b8',\n        marginTop: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, \"Forgot password?\")), React.createElement(View, {\n      style: {\n        backgroundColor: '#fff',\n        height: 50,\n        marginTop: 50,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: handleSubmit,\n      disabled: !isValid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 18,\n        color: '#000',\n        fontWeight: 'bold'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }, \" SIGN IN \"))));\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'flex-end',\n      justifyContent: 'center',\n      marginTop: 40,\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#fff',\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, \"Don't have an account?\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('SignUp');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'red',\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, \" Sign up \"))))));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["c:/xampp/htdocs/jetspeed/auth/SignIn.js"],"names":["React","useState","ScrollView","SafeAreaProvider","Feather","yup","Formik","styles","SignIn","navigation","secureTextEntry","setSecureTextEntry","loginValidationSchema","object","shape","email","string","required","password","min","container","flexDirection","marginTop","fontWeight","fontSize","color","values","console","log","handleChange","handleBlur","handleSubmit","errors","isValid","borderBottomWidth","borderBottomColor","paddingBottom","position","paddingLeft","flex","backgroundColor","height","justifyContent","alignItems","borderRadius","marginBottom","navigate"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, TextInput } from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport {Feather} from '@expo/vector-icons'\r\nimport * as yup from 'yup'\r\nimport { Formik } from 'formik'\r\nimport { styles } from '../styles/loginStyles';\r\n\r\nconst SignIn = ({navigation}) => {\r\n    const [secureTextEntry, setSecureTextEntry] = useState(true)\r\n    const loginValidationSchema = yup.object().shape({\r\n        email: yup.string().email(\"Please enter valid email\").required('Email Address is required'),\r\n        password: yup.string().min(8, ({ min }) => `Password must be at least ${min} characters`).required('Password is required'),\r\n    })\r\n\r\n    return (\r\n        <SafeAreaProvider style={styles.container}>\r\n            <ScrollView showVerticalScrollIndicator={false}>\r\n                <View style={{flexDirection: \"row\", marginTop: 40}}>\r\n                    <Text style={{fontWeight: \"bold\", fontSize: 22, color: '#fff'}}>JET</Text>\r\n                    <Text style={{fontWeight: \"bold\", fontSize: 22, color: '#333'}}>SPEED</Text>\r\n                </View>\r\n                <View style={{marginTop: 70}}>\r\n                    <Text style={{fontSize: 27, fontWeight: 'bold', color: '#fff'}}>Welcome Back,</Text>\r\n                    <Text style={{fontSize: 16, fontWeight: 'bold', color: '#333'}}>Sign in to continue</Text>\r\n                </View>\r\n                <View style={{marginTop: 20}}>\r\n                    <Formik\r\n                        validationSchema={loginValidationSchema}\r\n                        initialValues={{ email: '', password: '' }}\r\n                        onSubmit={values => console.log(values)}\r\n                    >\r\n                        {({ \r\n                            handleChange, \r\n                            handleBlur, \r\n                            handleSubmit, \r\n                            values,\r\n                            errors,\r\n                            isValid,\r\n                         }) => (\r\n                        <>\r\n                            <View style={{flexDirection: 'row', marginTop: 20, borderBottomWidth: 1, borderBottomColor: '#f2f2f2', paddingBottom: 5}}>\r\n                                <Feather\r\n                                    name=\"mail\"\r\n                                    color={'#fff'}\r\n                                    size={20}\r\n                                    style={{position: 'absolute'}}\r\n                                />\r\n                                <TextInput\r\n                                    name=\"email\"\r\n                                    placeholder=\"Email Address\"\r\n                                    style={{ color: '#fff',  paddingLeft: 30,  flex: 1,  fontSize: 18 }}\r\n                                    onChangeText={handleChange('email')}\r\n                                    onBlur={handleBlur('email')}\r\n                                    value={values.email}\r\n                                    keyboardType=\"email-address\"\r\n                                />\r\n                            </View>\r\n                            {errors.email &&\r\n                                <Text style={{ fontSize: 12, color: 'red' }}>{errors.email}</Text>\r\n                            }\r\n                            <View style={{flexDirection: 'row', marginTop: 20, borderBottomWidth: 1, borderBottomColor: '#f2f2f2', paddingBottom: 5}}>\r\n                                <Feather\r\n                                    name=\"lock\"\r\n                                    color={'#fff'}\r\n                                    size={20}\r\n                                    style={{position: 'absolute'}}\r\n                                />\r\n                                <TextInput\r\n                                    name=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    style={{ color: '#fff',  paddingLeft: 30,  flex: 1,  fontSize: 18 }}\r\n                                    onChangeText={handleChange('password')}\r\n                                    onBlur={handleBlur('password')}\r\n                                    value={values.password}\r\n                                    secureTextEntry={secureTextEntry}\r\n                                    autoCapitalize=\"none\"\r\n                                />\r\n                                <TouchableOpacity onPress={() => setSecureTextEntry(!secureTextEntry)}>\r\n                                    <Feather\r\n                                        name={secureTextEntry === true ? \"eye\" : \"eye-off\"}\r\n                                        size={20}\r\n                                        color={'#fff'}\r\n                                    />\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                            {errors.password &&\r\n                                <Text style={{ fontSize: 12, color: 'red' }}>{errors.password}</Text>\r\n                            }\r\n                            <TouchableOpacity>\r\n                                <Text style={{ color: '#17a2b8', marginTop: 20 }}>Forgot password?</Text>\r\n                            </TouchableOpacity>\r\n                            <View style={{backgroundColor: '#fff', height: 50, marginTop: 50, justifyContent: 'center', alignItems: 'center', borderRadius: 5}}>\r\n                                <TouchableOpacity onPress={handleSubmit} disabled={!isValid}>\r\n                                    <Text style={{fontSize: 18, color: '#000', fontWeight: 'bold'}}> SIGN IN </Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </>\r\n                        )}\r\n                    </Formik>\r\n                    <View style={{flexDirection: 'row', alignItems: 'flex-end', justifyContent: 'center', marginTop: 40, marginBottom: 20}}>\r\n                        <Text style={{color: '#fff', fontWeight: 'bold'}}>\r\n                            Don't have an account?\r\n                        </Text>\r\n                        <TouchableOpacity onPress={() => navigation.navigate('SignUp')}>\r\n                            <Text style={{color: 'red', fontWeight: 'bold'}}> Sign up </Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n        </SafeAreaProvider>\r\n    );\r\n}\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}