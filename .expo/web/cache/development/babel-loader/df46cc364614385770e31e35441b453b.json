{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"c:\\\\xampp\\\\htdocs\\\\jetspeed\\\\jetspeed\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from '@react-navigation/native';\nexport default function App() {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setIsLoading = _React$useState2[1];\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, React.createElement(StatusBar, {\n      style: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }), React.createElement(Image, {\n      style: styles.tinyLogo,\n      source: {\n        uri: 'https://reactnative.dev/img/tiny_logo.png'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(NavigationContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#17a2b8',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50\n  }\n});","map":{"version":3,"sources":["c:/xampp/htdocs/jetspeed/jetspeed/App.js"],"names":["StatusBar","React","NavigationContainer","App","useState","isLoading","setIsLoading","styles","container","tinyLogo","uri","StyleSheet","create","backgroundColor","flex","alignItems","justifyContent","width","height"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,wBAAkCF,KAAK,CAACG,QAAN,CAAe,IAAf,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAID,SAAJ,EAAe;AACb,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAED,MAAM,CAACE,QADhB;AAEE,MAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE;AADC,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAWD,GAZD,MAYO;AACL,WACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD;AAEF;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,eAAe,EAAE,SADR;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BP,EAAAA,QAAQ,EAAE;AACRQ,IAAAA,KAAK,EAAE,EADC;AAERC,IAAAA,MAAM,EAAE;AAFA;AAPqB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, Image } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\n\nexport default function App() {\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  if (isLoading) {\n    return (\n      <View style={styles.container}>\n        <StatusBar style=\"light\" />\n        <Image\n          style={styles.tinyLogo}\n          source={{\n            uri: 'https://reactnative.dev/img/tiny_logo.png',\n          }}\n        />\n      </View>\n    )\n  } else {\n    return (\n      <NavigationContainer>\n\n      </NavigationContainer>\n    )\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#17a2b8',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}